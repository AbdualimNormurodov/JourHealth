// <auto-generated />
using System;
using JourHealth.DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace JourHealth.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230810124627_InitialMigrations")]
    partial class InitialMigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("JourHealth.Domain.Entites.MedicalHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DoctorFullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DoctorSpeciality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("InspectionTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("PatienId")
                        .HasColumnType("bigint");

                    b.Property<string>("Recipe")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Symptoms")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TypeOfCure")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PatienId");

                    b.ToTable("MedicalHistories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Diagnosis = "Asperger syndrome",
                            DoctorFullName = "Cordrey Zacharia",
                            DoctorSpeciality = "Dermatolog",
                            InspectionTime = new DateTime(2013, 2, 9, 19, 0, 0, 0, DateTimeKind.Utc),
                            PatienId = 1L,
                            Recipe = "Aspiren,Izofluran",
                            Symptoms = "Measles",
                            TypeOfCure = "Diabetes Treatments"
                        },
                        new
                        {
                            Id = 2L,
                            Diagnosis = " Rett syndrome",
                            DoctorFullName = "Drinkhill Elijah",
                            DoctorSpeciality = "Neurolog",
                            InspectionTime = new DateTime(2018, 5, 14, 19, 0, 0, 0, DateTimeKind.Utc),
                            PatienId = 2L,
                            Recipe = "Morfin",
                            Symptoms = "conjunctivitis",
                            TypeOfCure = "Stem Cell Therapy"
                        },
                        new
                        {
                            Id = 3L,
                            Diagnosis = " Scrotum",
                            DoctorFullName = "Kennelly",
                            DoctorSpeciality = "Orthoped",
                            InspectionTime = new DateTime(2013, 9, 17, 19, 0, 0, 0, DateTimeKind.Utc),
                            PatienId = 6L,
                            Recipe = " Garlic clove, Minced",
                            Symptoms = "Cough",
                            TypeOfCure = "Islet Cell Transplantation"
                        },
                        new
                        {
                            Id = 4L,
                            Diagnosis = " Strabismus",
                            DoctorFullName = "Lunney Freda",
                            DoctorSpeciality = "Pediatr",
                            InspectionTime = new DateTime(2007, 2, 19, 19, 0, 0, 0, DateTimeKind.Utc),
                            PatienId = 1L,
                            Recipe = "Galotan",
                            Symptoms = "Pathognomonic",
                            TypeOfCure = "Immunotherapies"
                        },
                        new
                        {
                            Id = 5L,
                            Diagnosis = "Reproductive system",
                            DoctorFullName = "Ferreiro Timmy",
                            DoctorSpeciality = "Cardiolog",
                            InspectionTime = new DateTime(2017, 5, 22, 19, 0, 0, 0, DateTimeKind.Utc),
                            PatienId = 1L,
                            Recipe = "Droperidol",
                            Symptoms = "Dehydration",
                            TypeOfCure = "Inhaled Insulin"
                        },
                        new
                        {
                            Id = 6L,
                            Diagnosis = " Pervasive developmental disorders ",
                            DoctorFullName = "Kennelly Dawn",
                            DoctorSpeciality = "Psychiatr",
                            InspectionTime = new DateTime(2001, 12, 10, 19, 0, 0, 0, DateTimeKind.Utc),
                            PatienId = 3L,
                            Recipe = "Diazepam",
                            Symptoms = "Allergy",
                            TypeOfCure = "Preserve Function of Beta Cells"
                        });
                });

            modelBuilder.Entity("JourHealth.Domain.Entites.Patient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "2668 Garrison Court",
                            DateOfBirth = new DateTime(1956, 6, 2, 19, 0, 0, 0, DateTimeKind.Utc),
                            Email = "fpargiter0@addtoany.com",
                            FirstName = "Frasco",
                            Gender = "Male",
                            LastName = "Pargiter",
                            Phone = "+7 722 471 0555"
                        },
                        new
                        {
                            Id = 2L,
                            Address = "154 Lake View Hill",
                            DateOfBirth = new DateTime(1978, 8, 22, 19, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ulunney1@mapy.cz",
                            FirstName = "Urbanus",
                            Gender = "Male",
                            LastName = "Lunney",
                            Phone = "+7 948 513 0995"
                        },
                        new
                        {
                            Id = 3L,
                            Address = "8 Kennedy Parkway",
                            DateOfBirth = new DateTime(1988, 1, 11, 19, 0, 0, 0, DateTimeKind.Utc),
                            Email = "wluckett2@zdnet.com",
                            FirstName = "Wyndham",
                            Gender = "Male",
                            LastName = "Luckett",
                            Phone = "+86 716 519 6428"
                        },
                        new
                        {
                            Id = 4L,
                            Address = "191 Del Sol Trail",
                            DateOfBirth = new DateTime(1928, 10, 31, 19, 0, 0, 0, DateTimeKind.Utc),
                            Email = "zferreiro3@plala.or.jp",
                            FirstName = "Zacharia",
                            Gender = "Male",
                            LastName = "Ferreiro",
                            Phone = "+62 556 355 0529"
                        },
                        new
                        {
                            Id = 5L,
                            Address = "62 Delladonna Crossing",
                            DateOfBirth = new DateTime(2013, 4, 2, 19, 0, 0, 0, DateTimeKind.Utc),
                            Email = "vguare4@blogspot.com",
                            FirstName = "Vannie",
                            Gender = "Female",
                            LastName = "Guare",
                            Phone = "+62 433 615 2364"
                        },
                        new
                        {
                            Id = 6L,
                            Address = "90301 Jana Circle",
                            DateOfBirth = new DateTime(2017, 9, 2, 19, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ddrydale5@psu.edu",
                            FirstName = "Dawn",
                            Gender = "Female",
                            LastName = "Drydale",
                            Phone = "+63 433 896 1062"
                        },
                        new
                        {
                            Id = 7L,
                            Address = "9244 6th Street",
                            DateOfBirth = new DateTime(2021, 2, 3, 19, 0, 0, 0, DateTimeKind.Utc),
                            Email = "cselwyn6@wufoo.com",
                            FirstName = "Charil",
                            Gender = "Female",
                            LastName = "Selwyn",
                            Phone = "+385 632 311 1550"
                        },
                        new
                        {
                            Id = 8L,
                            Address = "78552 Mandrake Trail",
                            DateOfBirth = new DateTime(1928, 6, 6, 19, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ecordrey7@adobe.com",
                            FirstName = "Elijah",
                            Gender = "Male",
                            LastName = "Cordrey",
                            Phone = "+380 203 655 7729"
                        },
                        new
                        {
                            Id = 9L,
                            Address = "3 Esch Terrace",
                            DateOfBirth = new DateTime(2006, 6, 17, 19, 0, 0, 0, DateTimeKind.Utc),
                            Email = "mdrinkhill8@telegraph.co.uk",
                            FirstName = "Margo",
                            Gender = "Female",
                            LastName = "Drinkhill",
                            Phone = "+20 625 506 6824"
                        },
                        new
                        {
                            Id = 10L,
                            Address = "47 Buhler Pass",
                            DateOfBirth = new DateTime(2009, 10, 8, 19, 0, 0, 0, DateTimeKind.Utc),
                            Email = "fsaddleton9@wunderground.com",
                            FirstName = "Fair",
                            Gender = "Male",
                            LastName = "Saddleton",
                            Phone = "+7 998 571 3542"
                        },
                        new
                        {
                            Id = 11L,
                            Address = "52813 Jenifer Plaza",
                            DateOfBirth = new DateTime(2013, 11, 17, 19, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ogirodiasa@163.com",
                            FirstName = "Osbourn",
                            Gender = "Male",
                            LastName = "Girodias",
                            Phone = "+7 509 569 5039"
                        },
                        new
                        {
                            Id = 12L,
                            Address = "00220 Golf View Center",
                            DateOfBirth = new DateTime(2001, 12, 11, 19, 0, 0, 0, DateTimeKind.Utc),
                            Email = "fwillattb@epa.gov",
                            FirstName = "Freda",
                            Gender = "Female",
                            LastName = "Willatt",
                            Phone = "+62 617 638 3707"
                        },
                        new
                        {
                            Id = 13L,
                            Address = "30 Waubesa Way",
                            DateOfBirth = new DateTime(2001, 5, 17, 19, 0, 0, 0, DateTimeKind.Utc),
                            Email = "skingzettc@gmpg.org",
                            FirstName = "Simone",
                            Gender = "Male",
                            LastName = "Kingzett",
                            Phone = "+62 366 244 3294"
                        },
                        new
                        {
                            Id = 14L,
                            Address = "02 Hansons Center",
                            DateOfBirth = new DateTime(2003, 9, 16, 19, 0, 0, 0, DateTimeKind.Utc),
                            Email = "tkennellyd@mail.ru",
                            FirstName = "Timmy",
                            Gender = "Female",
                            LastName = "Kennelly",
                            Phone = "+595 118 401 2243"
                        },
                        new
                        {
                            Id = 15L,
                            Address = "8 Jackson Pass",
                            DateOfBirth = new DateTime(2007, 7, 11, 19, 0, 0, 0, DateTimeKind.Utc),
                            Email = "svanoorde@posterous.com",
                            FirstName = "Saxe",
                            Gender = "Male",
                            LastName = "Van Oord",
                            Phone = "+380 700 958 2544"
                        });
                });

            modelBuilder.Entity("JourHealth.Domain.Entites.MedicalHistory", b =>
                {
                    b.HasOne("JourHealth.Domain.Entites.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });
#pragma warning restore 612, 618
        }
    }
}
